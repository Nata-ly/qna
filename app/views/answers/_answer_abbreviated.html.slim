- if answer.persisted?
  div id = "answer-#{answer.id}"
    p = answer.body

    - if answer.files.attached?
      - answer.files.each do |file|
        div id = "answer-file-#{file.id}"
          p = link_to file.filename.to_s, url_for(file)
          - if user_with_rights?(answer.user)
            p = link_to 'Delete file', destroy_file_answer_path(answer, file_id: file.id), method: :delete, remote: true
    - unless answer.links.count.zero?
      .links
        p Links:
        ul
          - answer.links.each do |link|
            li id = "answer-link-#{link.id}"
              = link_to link.name, link.url
              - if link.gist?
                .link-gist data-gist-id = "#{gist_id(link.url)}"
                  = javascript_include_tag link.url+".js"
              - if user_with_rights?(answer.user)
                p = link_to 'Delete link', destroy_link_answer_path(answer, link: link), method: :delete, remote: true

    .votes
      .votes-errors
      = link_to 'Negative', vote_negative_answer_path(answer), method: :patch, data: { type: :json }, remote: true, class: 'edit-votes-link'
      .value = answer.vote_value
      = link_to 'Positive', vote_positive_answer_path(answer), method: :patch, data: { type: :json }, remote: true, class: 'edit-votes-link'
      = link_to 'Cancel_voice', cancel_voice_answer_path(answer), method: :delete, data: { type: :json }, remote: true, class: 'edit-votes-link'
